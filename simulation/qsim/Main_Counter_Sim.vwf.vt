// Copyright (C) 2018  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "04/08/2024 18:30:10"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          Clock_Cycle_Counter
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module Clock_Cycle_Counter_vlg_vec_tst();
// constants                                           
// general purpose registers
reg CLK;
reg Reset;
// wires                                               
wire W0;
wire W1;
wire W2;
wire W3;
wire X0;
wire X1;
wire X2;
wire X3;
wire Y0;
wire Y1;
wire Y2;
wire Y3;
wire Z0;
wire Z1;
wire Z2;
wire Z3;

// assign statements (if any)                          
Clock_Cycle_Counter i1 (
// port map - connection between master ports and signals/registers   
	.CLK(CLK),
	.Reset(Reset),
	.W0(W0),
	.W1(W1),
	.W2(W2),
	.W3(W3),
	.X0(X0),
	.X1(X1),
	.X2(X2),
	.X3(X3),
	.Y0(Y0),
	.Y1(Y1),
	.Y2(Y2),
	.Y3(Y3),
	.Z0(Z0),
	.Z1(Z1),
	.Z2(Z2),
	.Z3(Z3)
);
initial 
begin 
#1000000 $finish;
end 

// CLK
initial
begin
	repeat(66)
	begin
		CLK = 1'b0;
		CLK = #7500 1'b1;
		# 7500;
	end
	CLK = 1'b0;
	CLK = #7500 1'b1;
end 

// Reset
initial
begin
	Reset = 1'b0;
end 
endmodule

